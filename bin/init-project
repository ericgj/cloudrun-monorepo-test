#!/usr/bin/env bash
set -eou pipefail

ACCT="$(cat secrets/billing-account)"
ORG="$(cat secrets/organization-id)"
PROJ=$(cat secrets/project)

if [ -z "${PROJ}" ]; then
    echo "Project not specified. Check secrets/project file." >&2
    exit 1
fi

echo "Checking GCP project exists..." >&2
PROJX=$(gcloud projects list --filter="projectId:${PROJ}" --format="get(name)" --limit=1)

if [ -z "${PROJX}" ]; then
    if [ -z "${ORG}"]; then
        echo "Creating GCP project..." >&2
        gcloud projects create "${PROJ}" --name "${PROJ}"
    else
        echo "Creating GCP project under organization..." >&2
        gcloud projects create "${PROJ}" --name "${PROJ}" --organization "${ORG}"
    fi
fi

if [ -n "${ACCT}" ]; then
    echo "Enabling billing..." >&2
    gcloud beta billing projects link ${PROJ} \
        --billing-account "${ACCT}"
fi

echo "Enabling services..." >&2
gcloud services enable --project ${PROJ} \
    cloudbuild.googleapis.com \
    cloudrun.googleapis.com \
    cloudkms.googleapis.com \
    cloudscheduler.googleapis.com \
    datastore.googleapis.com \
    logging.googleapis.com \
    pubsub.googleapis.com

echo "Creating keyring..." >&2
gcloud kms keyrings create project --project "${PROJ}" --location global
gcloud kms keyrings create test --project "${PROJ}" --location global

echo "Creating keys..." >&2
gcloud kms keys create default --project "${PROJ}" --location global \
    --keyring project --purpose encryption
gcloud kms keys create default --project "${PROJ}" --location global \
    --keyring test --purpose encryption
gcloud kms keys create service-accounts --project "${PROJ}" --location global \
    --keyring test --purpose encryption

echo "Encrypting project-wide secrets..." >&2
bin/kms encrypt

echo "Saving service account key for testing..." >&2
mkdir -p "secrets/test/service-accounts"
gcloud iam service-accounts keys create "secrets/test/service-accounts/project.json" \
    --iam-account "${PROJ}@appspot.gserviceaccount.com" \
    --project "${PROJ}"

echo "Encrypting service account key for testing..." >&2
bin/kms encrypt --env test --key service-accounts
